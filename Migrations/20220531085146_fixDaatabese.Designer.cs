// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Steema1.Context;

namespace OnlineLab.Migrations
{
    [DbContext(typeof(PhysDataContext))]
    [Migration("20220531085146_fixDaatabese")]
    partial class fixDaatabese
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnlineLab.Context.Models.ImagePresentation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("frame")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("OnlineLab.Context.Models.TaskExecution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("StartStatus")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Steema1.Context.Models.InitialParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<double>("dif")
                        .HasColumnType("float");

                    b.Property<double>("dt")
                        .HasColumnType("float");

                    b.Property<double>("dx")
                        .HasColumnType("float");

                    b.Property<double>("nju")
                        .HasColumnType("float");

                    b.Property<double>("rs")
                        .HasColumnType("float");

                    b.Property<double>("v0")
                        .HasColumnType("float");

                    b.Property<double>("x0")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("InitialParams");
                });

            modelBuilder.Entity("Steema1.Context.Models.PhysData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Shot")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("lab3aNd1string")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lab3aNd2string")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lab3aPsi1string")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lab3aPsi2string")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lab3aVi1string")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lab3aVi2string")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lab3afstring")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lab3au1string")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lab3au2string")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lab3av1string")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lab3av2string")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PhysDatas");
                });

            modelBuilder.Entity("Steema1.Context.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordConfirm")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Steema1.Context.Models.InitialParam", b =>
                {
                    b.HasOne("Steema1.Context.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Steema1.Context.Models.PhysData", b =>
                {
                    b.HasOne("Steema1.Context.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
